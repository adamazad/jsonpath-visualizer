{"version":3,"sources":["layouts/PancakeStack.js","layouts/FixedHeader.js","layouts/AsideFixed.js","layouts/Center.js","components/common/FileInput.js","components/JsonTree/helprs.js","components/JsonTree/index.js","containers/Visualizer.js","components/common/ErrorMessage.js","containers/NewQuery.js","App.js","styles/Theme.js","styles/Global.js","index.js"],"names":["Container","Styled","div","Aside","aside","Main","main","Content","HeaderWrapper","HeaderInnerWrapper","header","Header","children","InputContainer","button","StyledFileInput","input","className","props","type","objectHashCache","Map","toValueType","val","Array","isArray","calculateHash","object","cachedHash","get","objectHash","hash","set","isObjectEmpty","obj","Object","keys","length","isValuePrintable","includes","toPrintableValue","ExpandButton","collapse","JsonToHTMLMemo","memo","JsonToHTML","json","location","root","Utils","data-path","map","k","nextLocation","valueType","isNaN","prevProps","nextProps","JsonTree","forwardRef","ref","useEffect","treeRef","current","toggle","event","toggleButton","target","parentNode","Element","matches","Classie","toggleClass","parentElement","addEventListener","removeEventListener","Matches","AsideWithShadhow","PancakeStack","JsonContainer","Visualizer","timer","useState","query","setQuery","querySeconds","setQuerySeconds","setMatches","createRef","traverseTo","pointer","element","querySelector","scrollIntoView","behavior","id","onChange","clearTimeout","setTimeout","jsonRef","value","trim","querySelectorAll","forEach","jsonNode","classList","remove","timeStart","performance","now","pointers","JSONPath","path","preventEval","resultType","timeEnd","pointerSelectors","join","add","toFixed","placeholder","match","onClick","StyledWrapper","ErrorMessage","error","message","NewQuery","jsonFile","setJsonFile","loading","setLoading","setError","Center","animation","AnimationsLoading","size","FileInput","accept","file","files","Error","name","reader","FileReader","JSON","parse","result","e","readAsText","fetch","headers","then","res","catch","err","App","reboot","defaultRebootTheme","console","log","Theme","fonts","base","monospace","heading","colors","text","black","gray","white","blue","navy","purple","lightGray","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","theme","Global","document","getElementById"],"mappings":"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","file":"static/js/main.bf8c64e4.chunk.js","sourcesContent":["import Styled from 'styled-components';\n\nconst StyledContainer = Styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n`;\n\nconst StyledSidebar = Styled.aside`\n  max-width: 300px;\n  display: flex;\n  flex: 0 0 300px;\n`;\n\nconst StyledMain = Styled.main`\n  display: flex;\n  flex-grow: 2;\n  background: #ffffff;\n`;\n\nexport default {\n  Container: StyledContainer,\n  Aside: StyledSidebar,\n  Main: StyledMain\n}","import React from 'react';\nimport Styled from 'styled-components';\n\n// Feel free to adjust the header height here\nconst HEADER_HEIGHT = '60px';\n\nconst Container = Styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  flex-direction: column;\n`;\n\nconst Content = Styled.div`\n  display: flex;\n  flex-grow: 1;\n`;\n\nconst HeaderWrapper = Styled.div`\n  text-align: center;\n  flex: 0 0 ${HEADER_HEIGHT};\n`;\n\nconst HeaderInnerWrapper = Styled.header`\n  position: fixed;\n  width: 100%;\n  background: #fff;\n  z-index: 1;\n  height: ${HEADER_HEIGHT};\n  box-shadow: 0px 6px 6px 0 rgba(0,0,0,.12);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n/**\n * A wrapper for fixed header\n */\nconst Header = ({ children }) => (\n  <HeaderWrapper>\n    <HeaderInnerWrapper>\n      { children }\n    </HeaderInnerWrapper>\n  </HeaderWrapper>\n);\n\nexport default {\n  Container,\n  Content,\n  Header\n}","import Styled from 'styled-components';\n\nconst MARGIN_X = `20px`;\n\nconst StyledContainer = Styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n`;\n\nconst StyledSidebar = Styled.aside`\n  position: fixed;\n  width: 400px;\n  top: 30px;\n  margin-right: ${MARGIN_X};\n  margin-left: ${MARGIN_X};\n  display: flex;\n`;\n\nconst StyledMain = Styled.main`\n  margin-right: ${MARGIN_X};\n  margin-left: ${MARGIN_X};\n  display: flex;\n  flex-grow: 2;\n  background: #ffffff;\n`;\n\nexport default {\n  Container: StyledContainer,\n  Aside: StyledSidebar,\n  Main: StyledMain\n}","import Styled from 'styled-components';\n\nconst Content = Styled.div`\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n  min-width: 100%;\n  min-height: 100%;\n`;\n\nexport default {\n  Content\n};","import React from 'react';\nimport Styled from 'styled-components';\n\nconst InputContainer = Styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  overflow: hidden;\n  & * {\n    cursor: pointer;\n  }\n`;\n\nconst StyledFileInput = Styled.input`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  min-width: 100%;\n  min-height: 100%;\n  text-align: right;\n  filter: alpha(opacity=0);\n  opacity: 0;\n  background: none repeat scroll 0 0 transparent;\n  cursor: inherit;\n  display: block;\n`;\n\nexport default ({ children, className, ...props }) => (\n  <InputContainer className={className}>\n    {children}\n    <StyledFileInput type=\"file\" { ...props } />\n  </InputContainer>\n)","import hash from 'object-hash';\n\n/**\n * Calculates object hash and returns it\n * @param {object} object\n * @returns {string} The hash\n */\n// Cache Layer\nconst objectHashCache = new Map();\n\nfunction calculateHash(object = {}) {\n  // Retrieve from\n  let cachedHash = objectHashCache.get(object);\n  // Return if the object is cached\n  if (cachedHash) {\n    return cachedHash;\n  }\n  // Calculate object hash\n  let objectHash = hash(object);\n  // Store\n  objectHashCache.set(object, objectHash);\n  // Return\n  return objectHash;\n}\n\n/**\n * Returns the HTML-friendly value\n * @param {any} val\n * @returns {string|number}\n */\nfunction toPrintableValue(val) {\n  if (typeof val === \"number\") {\n    return val;\n  }\n  if (typeof val === \"boolean\") {\n    return \"\" + val;\n  }\n  return `${val}`;\n}\n\n/**\n * Checks if the value is printable (primitive)\n * @param {any} val\n */\nfunction isValuePrintable(val) {\n  return [\"string\", \"number\", \"boolean\"].includes(typeof val) || val === null;\n}\n\n\n/**\n * Checks if the value is printable (primitive)\n * @param {any} val\n */\nfunction toValueType(val) {\n  if (Array.isArray(val)) {\n    return 'array';\n  }\n  if (val === null) {\n    return 'null';\n  }\n  return typeof val;\n}\n\n/**\n * Checks if the object is empty === {}\n * @param {object} obj\n * @returns {boolean}\n */\nfunction isObjectEmpty(obj) {\n  return !Object.keys(obj).length;\n}\n\nexport default {\n  toValueType,\n  calculateHash,\n  isObjectEmpty,\n  isValuePrintable,\n  toPrintableValue,\n}","import Classie from 'desandro-classie';\nimport React, { useEffect, memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\n// Import Utils\nimport Utils from './helprs';\n// Import style\nimport './JsonTree.scss';\n\nconst TOGGLE_BUTTON_CLASSNAME = `json-button-expand`;\n/**\n * Expand/collapse button\n */\nconst ExpandButton = ({ collapse, ...props }) => <button className={TOGGLE_BUTTON_CLASSNAME} { ...props }></button>\n\n/**\n * A recursive fucntion that transforms a JSON object to HTML representation.\n *\n *\n * @param {Object} options\n * @param {Object|string|any[]} options.json The JSON value at this location/level\n * @param {string} options.location The current location in the tree, in JSONPath Pointer format\n * @param {boolean} options.root Indicate if the current element is a root\n */\nfunction JsonToHTML({ json, location = '/', root = false }) {\n\n  // Each key has data-path attribute which is used to highlight the matches from JSONPath\n\n  // If the value is printable\n  // for strucutres such as: \"foobar\", 1, null\n  // These values do not require a expand button\n  if (Utils.isValuePrintable(json)) {\n    return (\n        <span\n          className={ `json-value ${typeof json }`}\n          data-path={location}\n        >\n        { Utils.toPrintableValue(json) }\n      </span >\n    );\n  }\n\n  // If the value is an key:value object\n  // Valid cases\n  // {\"foo\":\"bar\"}\n  // [{},\"foo\",]\n  return (\n    <>\n      { Object.keys(json).map(k => {\n\n        let nextLocation = `${!root ? location : ''}/${k}`;\n        // Retrieve the actual value because typeof returns object for both {} and []\n        let valueType = Utils.toValueType(json[k]);\n        /**\n         * Cases:\n         * \"foo\": string\n         * \"foo\": number\n         * \"foo\": null\n         * \"foo\": undefined\n         * \"foo\": boolean\n         * \"foo\": object\n         */\n        // If it is a printable value such: boolean, string, null\n        if (Utils.isValuePrintable(json[k])) {\n          return (\n            <>\n              <div\n                className=\"json-key-value-pair\"\n                data-path={ nextLocation }\n              >\n                { isNaN(k) && <span className=\"json-key\">{ k }</span> }\n                <span className={ `json-value ${valueType}` }>{ Utils.toPrintableValue(json[k]) }</span>\n                </div>\n            </>\n          )\n        }\n\n        // Complex value of {} or []\n        // Wrap the next object/array in json-key-{type}-pair div, then jump to deeper levels\n        return (\n          <div\n            className={ `${Array.isArray(json[k]) ? `json-key-array-pair` : `json-key-value-pair`}` }\n            data-path={ nextLocation }\n          >\n            { !Utils.isObjectEmpty(json[k]) && (\n              <>\n                <ExpandButton />\n                <span className=\"json-key\">{ k }</span>\n              </>\n            ) }\n            <span className={ `json-value ${valueType}` }>\n              { JsonToHTML({\n                json: json[k],\n                location: nextLocation,\n              }) }\n            </span>\n          </div>\n        );\n      }) }\n    </>\n  );\n}\n\n\n/**\n * A memoizaed version of the JsonToHTML\n * Cache layer (object hash) prevents redundant re-rendering\n */\nconst JsonToHTMLMemo = memo(JsonToHTML, (prevProps, nextProps) => {\n  // Calculate the object hash for `json` property against the current\n  let prevJsonHash = Utils.calculateHash(prevProps.json);\n  let nextJsonHash = Utils.calculateHash(prevProps.json);\n\n  if (prevJsonHash === nextJsonHash) {\n    return true;\n  }\n  // They do not match\n  return false;\n});\n\n/**\n * Allow parent components to access the JSON Container in the DOM.\n * Cases uses are for highlighting the matches.\n */\nconst JsonTree = forwardRef(({ json, ...props }, ref) => {\n\n  // For collapsing the objects\n  useEffect(() => {\n\n    const treeRef = ref.current;\n\n    // Event listener for changes\n    const toggle = (event) => {\n      // A refernece to toggle button\n      let toggleButton;\n      // Try to find the toggleButton\n      for (let target=event.target; target && target !== this; target = target.parentNode) {\n        // loop parent nodes from the target to the delegation node\n        if (target instanceof Element && target.matches(`.${TOGGLE_BUTTON_CLASSNAME}`)) {\n          toggleButton = target;\n          break;\n        }\n      }\n      // Exit if no node was found (no match)\n      if (!toggleButton) {\n        return false;\n      }\n      // Toggle .collpase on the parent (json-array or json-object)\n      Classie.toggleClass(toggleButton.parentElement, 'collapse');\n    }\n    // Add it\n    treeRef.addEventListener('click', toggle);\n    // Clean up the listener on unmount\n    return () => treeRef.removeEventListener('click', toggle);\n  });\n\n  // Recursively render the tree\n  // Every component from here is stateless to leverage efficient rendering.\n  // Collapse state is not saved in React to avoid re-rendering child tree(s)\n  return (\n    <div className=\"json-tree\" ref={ ref } { ...props }>\n      <div className={`json-value ${Utils.toValueType(json)}`}>\n        <JsonToHTMLMemo json={ json } root={true} />\n      </div>\n    </div>\n  );\n\n});\n\n/**\n * Prop validation\n */\nJsonTree.propTypes = {\n  json: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object\n  ]).isRequired\n}\n\nexport default JsonTree;","import React, { useState, createRef } from 'react';\nimport Styled from 'styled-components';\n\nimport { JSONPath } from 'jsonpath-plus';\n// Sample datasets\nimport { PancakeStack } from '../layouts';\nimport JsonTree from '../components/JsonTree';\n\nconst Matches = Styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 540px;\n`;\n\nconst AsideWithShadhow = Styled(PancakeStack.Aside)`\n  padding: 20px;\n  width: 100%;\n  box-shadow: 6px 0px 6px 0px rgba(0,0,0,.12);\n  flex-direction: column;\n  z-index: 0;\n`;\n\nconst JsonContainer = Styled.div`\n  position: relative;\n  overflow: auto;\n  width: 100%;\n\n  > .json-tree {\n    position: absolute;\n    padding: 20px;\n  }\n`;\n\n/**\n *\n * @param {import('react').Props} props\n * @param {Object} props.json\n */\nfunction Visualizer({ json }) {\n\n  const [query, setQuery] = useState('');\n  const [querySeconds, setQuerySeconds] = useState(0);\n  const [matches, setMatches] = useState([]);\n\n  const ref = createRef();\n\n  // When the query changes\n  let timer;\n  const onQueryChange = ({ target }) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      const jsonRef = ref.current;\n\n      if ([query, \"\"].includes(target.value.trim())) {\n        // Clear up previous results\n        return jsonRef.querySelectorAll('[data-path]').forEach(jsonNode => jsonNode.classList.remove('json-highlight'));\n      }\n\n      // Find the results from the JSON\n      let timeStart = performance.now();\n      // Find the pointers using JSONPath\n      let pointers = JSONPath({\n        json,\n        path: target.value,\n        preventEval: true,\n        resultType: \"pointer\",\n      });\n      // Performance ends\n      let timeEnd = performance.now();\n\n      // Clear up previous results\n      jsonRef.querySelectorAll('[data-path]').forEach(jsonNode => jsonNode.classList.remove('json-highlight'));\n\n      // Convert pointers to DOM selector\n      const pointerSelectors = pointers.map(pointer => `[data-path=\"${pointer}\"]`).join(',');\n      if (pointerSelectors) {\n        // Highlight the matching pointers\n        jsonRef.querySelectorAll(pointerSelectors).forEach(jsonNode => jsonNode.classList.add('json-highlight'));\n        // Travel to first match\n        traverseTo(pointers[0]);\n      }\n\n      // Update state\n      setQuery(target.value);\n      // performance\n      setQuerySeconds((timeEnd - timeStart).toFixed(3));\n      // Number of results\n      setMatches(pointers);\n\n    }, 200);\n  };\n\n\n  const traverseTo = (pointer) => {\n\n    const jsonRef = ref.current;\n    const element = jsonRef.querySelector(`[data-path=\"${pointer}\"]`);\n    // Scroll to if found\n    element && element.scrollIntoView({ behavior: 'smooth' });\n\n  }\n\n  return (\n    <PancakeStack.Container>\n      <AsideWithShadhow>\n          <form>\n            <div>\n              <label>Query</label>\n              <input type=\"text\" id=\"query\" onChange={ onQueryChange } placeholder=\"Search query\" />\n            </div>\n          </form>\n          <small>\n            { query.trim() !== \"\" && (<>Found {matches.length} results ({querySeconds} ms)</>) }\n          </small>\n          <Matches>\n            { matches.length > 0 && (\n              matches.map(match => <button className=\"link\" data-path={match} onClick={ () => traverseTo(match) }>{ match }</button>)\n            ) }\n          </Matches>\n      </AsideWithShadhow>\n      <PancakeStack.Main>\n        <JsonContainer>\n          <JsonTree json={ json } ref={ ref } />\n        </JsonContainer>\n      </PancakeStack.Main>\n    </PancakeStack.Container>\n  );\n}\n\nexport default Visualizer;","import React from 'react';\nimport Styled from 'styled-components';\n\nconst StyledWrapper = Styled.div`\n  background: #e63946;\n  color: #fff;\n  padding: 0px 10px;\n  border-radius: 4px;\n`;\n\n/**\n * @param {Object} props\n * @param {Error} props.error\n */\nconst ErrorMessage = ({ error }) => {\n\n  if (!error) {\n    return null;\n  }\n\n  return (\n    <StyledWrapper>\n      <>{ error.message ? error.message : error }</>\n    </StyledWrapper>\n  );\n\n}\n\nexport default ErrorMessage;","import React, { useState } from 'react';\nimport UseAnimations from \"react-useanimations\";\nimport AnimationsLoading from 'react-useanimations/lib/loading';\nimport FileInput from '../components/common/FileInput';\nimport Visualizer from './Visualizer';\nimport { Center } from '../layouts';\nimport ErrorMessage from '../components/common/ErrorMessage';\n\nfunction NewQuery() {\n\n  const [jsonFile, setJsonFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchBitcoinUnconfirmedTx = () => {\n\n    setLoading(true);\n    setError(false);\n\n    fetch(`https://cors-anywhere.herokuapp.com/https://blockchain.info/unconfirmed-transactions?format=json`, {\n      headers: {\n        'X-Requested-With': 'fetch'\n      }\n    })\n    .then(res => res.json())\n    .then(json => {\n\n      setJsonFile(json);\n      setLoading(false);\n\n    })\n    .catch(err => {\n      setLoading(false);\n      setError(err);\n    });\n\n  }\n\n  const handleJsonFile = (event) => {\n\n    setLoading(true);\n    setError(false);\n\n    const [file] = event.target.files;\n\n    if (file.type !== \"application/json\") {\n      return setError(new Error(`${file.name} is not a valid JSON`));\n    }\n\n    const reader = new FileReader();\n\n    reader.addEventListener('load', ({ target }) => {\n      try {\n        // Try parsing as JSON\n        setJsonFile(JSON.parse(target.result));\n      } catch (e) {\n        setError(new Error(`${file.name} is not a valid JSON`));\n      }\n    });\n    // Loading state\n    reader.addEventListener(\"loadend\", setLoading(false));\n    // Error handler\n    reader.addEventListener(\"error\", error => setError(error));\n    // Load the file\n    reader.readAsText(file);\n  }\n\n\n  if (loading) {\n    return (\n      <Center.Content>\n        <UseAnimations animation={AnimationsLoading} size={ 56 }/>\n      </Center.Content>\n    );\n  }\n\n  if (jsonFile) {\n    return (\n      <Visualizer json={ jsonFile }/>\n    )\n  }\n\n  return (\n    <Center.Content>\n      <form>\n        <div>\n          <FileInput className=\"primary\" accept=\"application/json\" onChange={ handleJsonFile }>\n            <span>Select a {`{JSON}`} File</span>\n          </FileInput>\n        </div>\n      </form>\n      - OR -\n      <button className=\"link\" onClick={ fetchBitcoinUnconfirmedTx }>Bitcoin Unconfirmed Txs</button>\n      { error && (\n        <ErrorMessage error={error}/>\n      ) }\n    </Center.Content>\n  );\n\n}\n\nexport default NewQuery;","import React from 'react';\nimport { HeaderFixed } from './layouts';\nimport NewQuery from './containers/NewQuery';\n\nfunction App() {\n  return (\n    <HeaderFixed.Container>\n      <HeaderFixed.Header>\n        <h1>JSONPath Visualizer</h1>\n      </HeaderFixed.Header>\n      <HeaderFixed.Content>\n        <NewQuery/>\n      </HeaderFixed.Content>\n    </HeaderFixed.Container>\n  )\n}\n\nexport default App;\n","import { defaultRebootTheme } from 'styled-reboot';\n\nexport const fonts = {\n  base: `\"Space Mono\", monospace`,\n  monospace: `\"Space Mono\", monospace`,\n  heading: `\"Space Mono\", monospace`,\n}\n\nexport const colors = {\n  text: '#000e1a',\n  black: '#121212',\n  gray: '#9B9B9B',\n  white: '#ffffff',\n  blue: '#3426F1',\n  navy: '#004175',\n  purple: '#3426F1',\n  lightGray: '#f7f7f7',\n}\n\nexport const reboot = {\n  ...defaultRebootTheme,\n}\n\nconsole.log(reboot);\n\nconst Theme = {\n  ...reboot,\n  fonts,\n  colors,\n}\n\nexport default Theme;","import { createGlobalStyle,  } from 'styled-components';\nimport { reboot } from 'styled-reboot';\nimport Theme from './Theme';\n// Styled does not work with @import\nimport './fonts.css';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reboot}\n\n  html,\n  body,\n  #root {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n  body,\n  input,\n  button {\n    font-family: ${Theme.fonts.base};\n    font-size: 16px;\n    line-height: 1.5;\n  }\n\n  h1,\n  .h1,\n  h2,\n  .h2,\n  h3,\n  .h3,\n  h4,\n  .h4,\n  h5,\n  .h5,\n  h6,\n  .h6 {\n    font-family: ${Theme.fonts.heading};\n  }\n\n  input,\n  textarea {\n    display: block;\n    width: 100%;\n    padding: 0.375rem 0.75rem;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #495057;\n    background-color: ${Theme.colors.white};\n    background-clip: padding-box;\n    border: 1px solid #ced4da;\n    border-radius: 0.25rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  }\n\n  input:focus,\n  textarea:focus {\n    border: 1px solid ${Theme.colors.black};\n    outline: ${Theme.colors.black};\n  }\n\n  a {\n    color: ${Theme.colors.black};\n  }\n\n  button {\n    padding: 6px 12px;\n    border-radius: 4px;\n    cursor: pointer;\n\n    &.primary {\n      text-transform: uppercase;\n      background: ${Theme.colors.black};\n      color: ${Theme.colors.white};\n      border: 1px solid ${Theme.colors.white};\n    }\n\n    &.link {\n      border: 1px solid transparent;\n      background: transparent;\n      padding: 0px;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n\n  button[disabled] {\n    background: #ac98e8;\n    cursor: not-allowed;\n  }\n\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport Theme from './styles/Theme';\nimport GlobalStyle from './styles/Global';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={ Theme }>\n      <GlobalStyle/>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}